# coding: utf-8
"""NOTE: This file is auto generated by OpenAPI Generator (https://openapi-generator.tech).

Do not edit the file manually.
"""

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class DefangRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contents=None):  # noqa: E501
        """DefangRequest - a model defined in OpenAPI

        :param contents: The contents of this DefangRequest.  # noqa: E501
        :type contents: List[str]
        """
        self.openapi_types = {
            'contents': List[str]
        }

        self.attribute_map = {
            'contents': 'contents'
        }

        self._contents = contents

    @classmethod
    def from_dict(cls, dikt) -> 'DefangRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DefangRequest of this DefangRequest.  # noqa: E501
        :rtype: DefangRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contents(self):
        """Gets the contents of this DefangRequest.


        :return: The contents of this DefangRequest.
        :rtype: List[str]
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this DefangRequest.


        :param contents: The contents of this DefangRequest.
        :type contents: List[str]
        """
        if contents is None:
            raise ValueError("Invalid value for `contents`, must not be `None`")  # noqa: E501

        self._contents = contents
